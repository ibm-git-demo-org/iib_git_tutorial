---
swagger: "2.0"
info:
  description: "This is core schema used for Honda"
  version: "1.0.0"
  x-ibm-name: "incoreschemaheader"
  title: "InCoreSchemaHeader"
  contact:
    email: "apiconnect@honda.com"
host: "$(catalog.host)"
basePath: "/v1"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - invoke:
        target-url: "$(target-url)$(request.path)"
  phase: "realized"
  catalogs: {}
tags:
- name: "Honda"
  description: "Power of Dreams"
  externalDocs:
    description: "Find out more"
    url: "https://www.honda.com/"
paths:
  /HONDA/SALES:
    post:
      summary: "Fetches Vin details"
      operationId: "Inquiry"
      parameters:
      - name: "brand"
        in: "query"
        description: "Different brands to be considered as filter"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Honda"
          - "Accura"
          - "Engine"
          default: "Honda"
        collectionFormat: "multi" 
      - name: "dept"
        in: "query"
        description: "Different department to be considered as filter"        
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Service"
          - "Parts"
          - "SALES"
        collectionFormat: "multi"           
      - name: "transactiontype"
        in: "query"
        description: "Use transaction type as filter to fetch relevant data"        
        required: true
        type: "string"       
      - in: "body"
        name: "VINLoad"
        schema:
          $ref: "#/definitions/vinReq"
      responses:
        200:
          description: "200 - OKresponses"
          schema:
            $ref: "#/definitions/vinReq"
        400:
          description: "400 - Backend invalid Resonse Message"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Wrong log-in credential- Authentication failure. Authorization\
            \ failure"
          schema:
            $ref: "#/definitions/Error"
        412:
          description: "hondaHeaderType segment is missing"
          schema:
            $ref: "#/definitions/Error"
        415:
          description: "Invalid File Name in header"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Backend Valid Fault Message"
          schema:
            $ref: "#/definitions/Error"
        503:
          description: "Service Unavilable"
          schema:
            $ref: "#/definitions/Error"
        504:
          description: "Failed to establish Backside connection"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Error:
    type: "object"
    properties:
      Error:
        $ref: "#/definitions/ErrorObject"
  Header:
    properties:
      Header:
        $ref: "#/definitions/Headers"
    additionalProperties: false
  Headers:
    properties:
      code:
        type: "string"
      status:
        type: "string"
        enum:
        - "Success"
        - "Fatal"
        - "Warning"
      Errors:
        type: "array"
        items:
          $ref: "#/definitions/Error"
    additionalProperties: false
  ErrorObject:
    type: "object"
    properties:
      ErrorCode:
        type: "string"
      ErrorType:
        type: "string"
        enum:
        - "SECURITY"
        - "VALIDATION"
        - "REGISTRY"
        - "PROVIDER"
        - "REPEATABLE"
        - "INTERNAL"
      ErrorMessage:
        type: "string"
      AdditionalInfo:
        type: "string"
  iNMsgReqHeader:
    type: "object"
    properties:
      ReferenceNumber:
        type: "string"
      Brand:
        type: "string"
      BealerNumber:
        type: "string"
      ServiceDetails:
        type: "string"
  iNMsgReqPayload:
    type: "object"
    properties:
      VIN:
        type: "string"
  vinReq:
    type: "object"
    properties:
      Header:
        $ref: "#/definitions/iNMsgReqHeader"
      iNMsgReqPayload:
        $ref: "#/definitions/iNMsgReqPayload"
